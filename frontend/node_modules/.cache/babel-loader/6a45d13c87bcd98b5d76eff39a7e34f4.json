{"remainingRequest":"/Users/georgelugo/Desktop/rails_vue/vue_app/frontend/node_modules/babel-loader/lib/index.js!/Users/georgelugo/Desktop/rails_vue/vue_app/frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/georgelugo/Desktop/rails_vue/vue_app/frontend/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/georgelugo/Desktop/rails_vue/vue_app/frontend/src/components/Todos.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/georgelugo/Desktop/rails_vue/vue_app/frontend/src/components/Todos.vue","mtime":1644195893480},{"path":"/Users/georgelugo/Desktop/rails_vue/vue_app/frontend/babel.config.js","mtime":1644164563309},{"path":"/Users/georgelugo/Desktop/rails_vue/vue_app/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1642363664053},{"path":"/Users/georgelugo/Desktop/rails_vue/vue_app/frontend/node_modules/babel-loader/lib/index.js","mtime":1635366437722},{"path":"/Users/georgelugo/Desktop/rails_vue/vue_app/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1642363664053},{"path":"/Users/georgelugo/Desktop/rails_vue/vue_app/frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1644164228127}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2dlb3JnZWx1Z28vRGVza3RvcC9yYWlsc192dWUvdnVlX2FwcC9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMi5qcyI7CmV4cG9ydCBkZWZhdWx0IHsKICAvLyBpbXBvcnQgb3V0IGdldHRlcnMgYW5kIGFjdGlvbnMKICAvLyBnZXR0ZXJzIGFsbCB0b2RvcyBhbmQgYWN0aW9ucyBhcmUgbmV4dAogIG5hbWU6ICJUb2RvcyIsCiAgbWV0aG9kczogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtYXBBY3Rpb25zKFsnZmV0Y2hUb2RvcycsICdkZWxldGVUb2RvJywgJ3VwZGF0ZVRvZG8nXSkpLCB7fSwgewogICAgb25Eb3VibGVDbGljazogZnVuY3Rpb24gb25Eb3VibGVDbGljayhjdXJyZW50VG9kbykgewogICAgICB2YXIgdXBkYXRlZFRvZG8gPSB7CiAgICAgICAgaWQ6IGN1cnJlbnRUb2RvLmlkLAogICAgICAgIHRpdGxlOiBjdXJyZW50VG9kby50aXRsZSwKICAgICAgICBjb21wbGV0ZWQ6ICFjdXJyZW50VG9kby5jb21wbGV0ZWQKICAgICAgfTsKICAgICAgdGhpcy51cGRhdGVUb2RvKHVwZGF0ZWRUb2RvKTsKICAgIH0KICB9KSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZCh7fSwgbWFwR2V0dGVycyhbJ2FsbFRvZG9zJ10pKSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5mZXRjaFRvZG9zKCk7CiAgfQp9Ow=="},{"version":3,"mappings":";AA2BA,eAAe;AACZ;AACA;AACCA,MAAI,EAAE,OAHK;AAIXC,SAAO,kCACAC,UAAU,CAAC,CACV,YADU,EAEV,YAFU,EAGV,YAHU,CAAD,CADV;AAMHC,iBANG,yBAMWC,WANX,EAMwB;AACvB,UAAMC,WAAU,GAAI;AAChBC,UAAE,EAAEF,WAAW,CAACE,EADA;AAEhBC,aAAK,EAAEH,WAAW,CAACG,KAFH;AAGhBC,iBAAS,EAAE,CAACJ,WAAW,CAACI;AAHR,OAApB;AAKA,WAAKC,UAAL,CAAgBJ,WAAhB;AACJ;AAbG,IAJI;AAmBXK,UAAQ,oBACDC,UAAU,CAAC,CACV,UADU,CAAD,CADT,CAnBG;AAyBXC,SAzBW,qBAyBD;AACN,SAAKC,UAAL;AACJ;AA3BW,CAAf","names":["name","methods","mapActions","onDoubleClick","currentTodo","updatedTodo","id","title","completed","updateTodo","computed","mapGetters","created","fetchTodos"],"sourceRoot":"","sources":["/Users/georgelugo/Desktop/rails_vue/vue_app/frontend/src/components/Todos.vue"],"sourcesContent":["<template>\n    <div>\n        <h3>Todos</h3>\n        <div class=\"legend\">\n            <span>Double click to mark as complete.</span>\n            <span>\n                <span class=\"incomplete-box\"></span> = Incomplete\n            </span>\n            <span>\n                <span class=\"complete-box\"></span> = Complete\n            </span>\n        </div>\n        <div class=\"todos\">\n            <div \n                v-for=\"todo in allTodos\"\n                :key=\"todo.id\"\n                @dbclick=\"onDoubleClick(todo)\" \n                class=\"todo\"\n                v-bind:class=\"{'is-complete':todo.completed}\">\n                {{ todo.title }}\n                <i @click=\"deleteTodo(todo.id)\" class=\"fas fa-trash\"></i>\n                \n            </div>\n        </div>\n    </div>\n</template>\n<script>\nexport default {\n   // import out getters and actions\n   // getters all todos and actions are next\n    name: \"Todos\",\n    methods: {\n        ...mapActions([\n            'fetchTodos', \n            'deleteTodo', \n            'updateTodo'\n        ]),\n        onDoubleClick(currentTodo) {\n            const updatedTodo = {\n                id: currentTodo.id,\n                title: currentTodo.title,\n                completed: !currentTodo.completed\n            }\n            this.updateTodo(updatedTodo);\n        }\n    },\n    computed: {\n        ...mapGetters([\n            'allTodos',\n\n        ])\n    },\n    created() {\n        this.fetchTodos();\n    }\n}\n</script>\n<style scoped>\n    .todos {\n        display: grid;\n        grid-template-columns: repeat(3, 1fr);\n        grid-gap: 1rem;\n    }\n    .todo {\n        border: 1px solid #ccc;\n        background: #41b883;\n        padding: 1rem;\n        border-radius: 5px;\n        text-align: center;\n        position: relative;\n        cursor: pointer;\n    }\n    i {\n        position: absolute;\n        bottom: 10px;\n        right: 10px;\n        color: #fff;\n        cursor: pointer;\n    }\n    .legend {\n        display: flex;\n        justify-content: space-around;\n        margin-bottom: 1rem;\n    }\n    .complete-box {\n        display: inline-block;\n        width: 10px;\n        background: #35495e;\n    }\n    .incomplete-box {\n        display: inline-block;\n        width: 10px;\n        height: 10px;\n        background: #41b882;\n    }\n    @media (max-width: 500px) {\n        .todos {\n            grid-template-columns: (1, 1fr);\n        }\n    }\n</style>"]}]}