{"remainingRequest":"/Users/georgelugo/Desktop/rails_vue/vue_app/frontend/node_modules/babel-loader/lib/index.js!/Users/georgelugo/Desktop/rails_vue/vue_app/frontend/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/georgelugo/Desktop/rails_vue/vue_app/frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/georgelugo/Desktop/rails_vue/vue_app/frontend/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/georgelugo/Desktop/rails_vue/vue_app/frontend/src/components/Todos.vue?vue&type=template&id=d37f6326&scoped=true","dependencies":[{"path":"/Users/georgelugo/Desktop/rails_vue/vue_app/frontend/src/components/Todos.vue","mtime":1644202040193},{"path":"/Users/georgelugo/Desktop/rails_vue/vue_app/frontend/babel.config.js","mtime":1644164563309},{"path":"/Users/georgelugo/Desktop/rails_vue/vue_app/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1642363664053},{"path":"/Users/georgelugo/Desktop/rails_vue/vue_app/frontend/node_modules/babel-loader/lib/index.js","mtime":1635366437722},{"path":"/Users/georgelugo/Desktop/rails_vue/vue_app/frontend/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1644164228127},{"path":"/Users/georgelugo/Desktop/rails_vue/vue_app/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1642363664053},{"path":"/Users/georgelugo/Desktop/rails_vue/vue_app/frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1644164228127}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIGNyZWF0ZVRleHRWTm9kZSBhcyBfY3JlYXRlVGV4dFZOb2RlLCByZW5kZXJMaXN0IGFzIF9yZW5kZXJMaXN0LCBGcmFnbWVudCBhcyBfRnJhZ21lbnQsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVFbGVtZW50QmxvY2sgYXMgX2NyZWF0ZUVsZW1lbnRCbG9jaywgdG9EaXNwbGF5U3RyaW5nIGFzIF90b0Rpc3BsYXlTdHJpbmcsIG5vcm1hbGl6ZUNsYXNzIGFzIF9ub3JtYWxpemVDbGFzcywgcHVzaFNjb3BlSWQgYXMgX3B1c2hTY29wZUlkLCBwb3BTY29wZUlkIGFzIF9wb3BTY29wZUlkIH0gZnJvbSAidnVlIjsKCnZhciBfd2l0aFNjb3BlSWQgPSBmdW5jdGlvbiBfd2l0aFNjb3BlSWQobikgewogIHJldHVybiBfcHVzaFNjb3BlSWQoImRhdGEtdi1kMzdmNjMyNiIpLCBuID0gbigpLCBfcG9wU2NvcGVJZCgpLCBuOwp9OwoKdmFyIF9ob2lzdGVkXzEgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKGZ1bmN0aW9uICgpIHsKICByZXR1cm4gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImgzIiwgbnVsbCwgIlRvZG9zIiwgLTEKICAvKiBIT0lTVEVEICovCiAgKTsKfSk7Cgp2YXIgX2hvaXN0ZWRfMiA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoZnVuY3Rpb24gKCkgewogIHJldHVybiAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgewogICAgY2xhc3M6ICJsZWdlbmQiCiAgfSwgWy8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJzcGFuIiwgbnVsbCwgIkRvdWJsZSBjbGljayB0byBtYXJrIGFzIGNvbXBsZXRlLiIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgic3BhbiIsIG51bGwsIFsvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgic3BhbiIsIHsKICAgIGNsYXNzOiAiaW5jb21wbGV0ZS1ib3giCiAgfSksIC8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCIgPSBJbmNvbXBsZXRlICIpXSksIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJzcGFuIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJzcGFuIiwgewogICAgY2xhc3M6ICJjb21wbGV0ZS1ib3giCiAgfSksIC8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCIgPSBDb21wbGV0ZSAiKV0pXSwgLTEKICAvKiBIT0lTVEVEICovCiAgKTsKfSk7Cgp2YXIgX2hvaXN0ZWRfMyA9IHsKICBjbGFzczogInRvZG9zIgp9Owp2YXIgX2hvaXN0ZWRfNCA9IFsib25EYmxjbGljayJdOwp2YXIgX2hvaXN0ZWRfNSA9IFsib25DbGljayJdOwpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIG51bGwsIFtfaG9pc3RlZF8xLCBfaG9pc3RlZF8yLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8zLCBbKF9vcGVuQmxvY2sodHJ1ZSksIF9jcmVhdGVFbGVtZW50QmxvY2soX0ZyYWdtZW50LCBudWxsLCBfcmVuZGVyTGlzdChfY3R4LmFsbFRvZG9zLCBmdW5jdGlvbiAodG9kbykgewogICAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgewogICAgICBrZXk6IHRvZG8uaWQsCiAgICAgIG9uRGJsY2xpY2s6IGZ1bmN0aW9uIG9uRGJsY2xpY2soJGV2ZW50KSB7CiAgICAgICAgcmV0dXJuICRvcHRpb25zLm9uRG91YmxlQ2xpY2sodG9kbyk7CiAgICAgIH0sCiAgICAgIGNsYXNzOiBfbm9ybWFsaXplQ2xhc3MoWyJ0b2RvIiwgewogICAgICAgICdpcy1jb21wbGV0ZSc6IHRvZG8uY29tcGxldGVkCiAgICAgIH1dKQogICAgfSwgW19jcmVhdGVUZXh0Vk5vZGUoX3RvRGlzcGxheVN0cmluZyh0b2RvLnRpdGxlKSArICIgIiwgMQogICAgLyogVEVYVCAqLwogICAgKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaSIsIHsKICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljaygkZXZlbnQpIHsKICAgICAgICByZXR1cm4gX2N0eC5kZWxldGVUb2RvKHRvZG8uaWQpOwogICAgICB9LAogICAgICBjbGFzczogImZhcyBmYS10cmFzaC1hbHQiCiAgICB9LCBudWxsLCA4CiAgICAvKiBQUk9QUyAqLwogICAgLCBfaG9pc3RlZF81KV0sIDQyCiAgICAvKiBDTEFTUywgUFJPUFMsIEhZRFJBVEVfRVZFTlRTICovCiAgICAsIF9ob2lzdGVkXzQpOwogIH0pLCAxMjgKICAvKiBLRVlFRF9GUkFHTUVOVCAqLwogICkpXSldKTsKfQ=="},{"version":3,"mappings":";;;;;;;sBAEQA,oBAAc,IAAd,EAAc,IAAd,EAAI,OAAJ,EAAS;AAAA;AAAT;;;;sBACAA,oBAQM,KARN,EAQM;AARDC,SAAK,EAAC;AAQL,GARN,EAAmB,cACfD,oBAA8C,MAA9C,EAA8C,IAA9C,EAAM,mCAAN,CADe,eAEfA,oBAEO,MAFP,EAEO,IAFP,EAEO,cADHA,oBAAoC,MAApC,EAAoC;AAA9BC,SAAK,EAAC;AAAwB,GAApC,CACG,gCADiC,iBACjC,CAFP,CAFe,eAKfD,oBAEO,MAFP,EAEO,IAFP,EAEO,cADHA,oBAAkC,MAAlC,EAAkC;AAA5BC,SAAK,EAAC;AAAsB,GAAlC,CACG,gCAD+B,eAC/B,CAFP,CALe,CAAnB;;AAAA;;;;AASKA,OAAK,EAAC;;;;;uBAXfC,oBAsBM,KAtBN,EAsBM,IAtBN,EAsBM,CArBFC,UAqBE,EApBFC,UAoBE,EAXFJ,oBAUM,KAVN,cAUM,oBATFE,oBAQMG,SARN,EAQM,IARN,EAQMC,YAPaC,aAOb,EAPqB,UAAhBC,IAAgB,EAAZ;yBADfN,oBAQM,KARN,EAQM;AANDO,SAAG,EAAED,IAAI,CAACE,EAMT;AALDC,gBAAQ;AAAA,eAAEC,uBAAcJ,IAAd,CAAF;AAAA,OAKP;AAJFP,WAAK,mBAAC,MAAD,EAAO;AAAA,uBACiBO,IAAI,CAACK;AADtB,OAAP;AAIH,KARN,qCAMOL,IAAI,CAACM,SAAQ,KAChB;AAAA;OAAAd,oBAA6D,GAA7D,EAA6D;AAAzDe,aAAK;AAAA,eAAER,gBAAWC,IAAI,CAACE,EAAhB,CAAF;AAAA,OAAoD;AAA7BT,WAAK,EAAC;AAAuB,KAA7D;;AAAA,kBAPJ;;AAAA;GAQM,CARN;;AAAA,GASE,EAVN,CAWE,CAtBN","names":["_createElementVNode","class","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","_ctx","todo","key","id","onDblclick","$options","completed","title","onClick"],"sourceRoot":"","sources":["/Users/georgelugo/Desktop/rails_vue/vue_app/frontend/src/components/Todos.vue"],"sourcesContent":["<template>\n    <div>\n        <h3>Todos</h3>\n        <div class=\"legend\">\n            <span>Double click to mark as complete.</span>\n            <span>\n                <span class=\"incomplete-box\"></span> = Incomplete\n            </span>\n            <span>\n                <span class=\"complete-box\"></span> = Complete\n            </span>\n        </div>\n        <div class=\"todos\">\n            <div \n                v-for=\"todo in allTodos\"\n                :key=\"todo.id\"\n                @dblclick=\"onDoubleClick(todo)\" \n                class=\"todo\"\n                v-bind:class=\"{'is-complete':todo.completed}\">\n                {{ todo.title }}\n                <i @click=\"deleteTodo(todo.id)\" class=\"fas fa-trash-alt\"></i>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport {mapGetters, mapActions} from 'vuex';\n\nexport default {\n   // import out getters and actions\n   // getters all todos and actions are next\n    name: \"Todos\",\n    methods: {\n        ...mapActions([\n            'fetchTodos', \n            'deleteTodo', \n            'updateTodo'\n        ]),\n        onDoubleClick(currentTodo) {\n            const updatedTodo = {\n                id: currentTodo.id,\n                title: currentTodo.title,\n                completed: !currentTodo.completed\n            }\n            this.updateTodo(updatedTodo);\n        }\n    },\n    computed: {\n        ...mapGetters([\n            'allTodos',\n        ])\n    },\n    created() {\n        this.fetchTodos();\n    }\n}\n</script>\n<style scoped>\n    .todos {\n        display: grid;\n        grid-template-columns: repeat(3, 1fr);\n        grid-gap: 1rem;\n    }\n    .todo {\n        border: 1px solid #ccc;\n        background: #41b883;\n        padding: 1rem;\n        border-radius: 5px;\n        text-align: center;\n        position: relative;\n        cursor: pointer;\n    }\n    i {\n        position: absolute;\n        bottom: 10px;\n        right: 10px;\n        color: #fff;\n        cursor: pointer;\n    }\n    .legend {\n        display: flex;\n        justify-content: space-around;\n        margin-bottom: 1rem;\n    }\n    .complete-box {\n        display: inline-block;\n        width: 10px;\n        height: 10px;\n        background: #35495e;\n    }\n    .incomplete-box {\n        display: inline-block;\n        width: 10px;\n        height: 10px;\n        background: #41b882;\n    }\n    .is-complete {\n        background: #35495e;\n        color: #fff;\n    }\n    @media (max-width: 500px) {\n        .todos {\n            grid-template-columns: 1fr;\n        }\n    }\n</style>"]}]}